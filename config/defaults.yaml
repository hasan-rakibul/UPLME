hydra:
  job:
    name: ${expt.main_data}_${expt.approach}_lambdas-${expt.lambdas}_tune-${expt.do_tune}_${expt.hydra.job.name}
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}_${hydra:job.name}

# Notes: https://hydra.cc/docs/tutorials/basic/your_first_app/defaults/
defaults:
  - _self_ # means configs under expt here will be overwritten by expt/...yaml
  - expt: train-uplme

# NOTE: the following are applied unless they are overwritten by the expt/xx.yaml
expt:
  overwrite_parent_dir: null
  approach: cross-prob # options: cross-basic, cross-prob
  is_two_models: True
  lbl_split: 1.0 # percent of data to be used for labelled training
  sanitise_labels: False # whether to sanitise labels for newsemp dataset

  # Only keep samples if the difference between 'empathy' and 'llm_empathy' < delta during sanitisation
  # If delta is null (i.e, None), then we don't filter any samples
  delta: null

  noise_level: 0.0 # level of label noise to be added, if add_noise is True
  add_noise_train: False
  add_noise_test: False
  do_augment: True
  
  lambdas: [1, 0, 0, 0, 0]
  error_decay_factor: 1.0
  num_passes: 4
  
  do_train: True
  do_test: True # automatically, not done if do_tune is True
  do_tune: False
  n_trials: 50

  main_data: newsemp # options: newsemp, empstories
  is_ucvme: False

  ### if newsemp:
  # these are just to retrieve the correct file names for newsemp dataset.
  # actual train and val data depends on main_data
  train_data: [2024, 2022]
  val_data: 2024 # test would be same as val_data as in in-sample setting

max_steps: 6000
val_check_interval: 200 # num steps (if int) or portion of epoch (if float)
lr: 3.0e-5
train_bsz: 16
eval_bsz: 16

seeds: [0, 42, 100]

### if newsemp:
# all files list that we "can" use for training / validation / testing
# NOTE: not all files are used in UPLME, they are just for reference, which especially came from our earlier work
2024:
    train: data/NewsEmp2024/trac3_EMP_train.csv
    train_llama: data/NewsEmp2024/trac3_EMP_train_llama.tsv
    train_gpt: data/NewsEmp2024/trac3_EMP_train_gpt.tsv
    val: data/NewsEmp2024/trac3_EMP_dev.csv
    val_llama: data/NewsEmp2024/trac3_EMP_dev_llama.tsv
    val_gpt: data/NewsEmp2024/trac3_EMP_train_gpt.tsv
    test: data/NewsEmp2024/test_data_with_labels/goldstandard_EMP.csv
    test_llama: data/NewsEmp2024/test_data_with_labels/goldstandard_EMP_llama.tsv
2022:
    train: data/NewsEmp2022/messages_train_ready_for_WS.tsv
    train_llama: data/NewsEmp2022/messages_train_ready_for_WS_llama.tsv
    val: data/NewsEmp2022/messages_dev_features_ready_for_WS_2022.tsv
    val_llama: data/NewsEmp2022/messages_dev_features_ready_for_WS_2022_llama.tsv
    test: data/NewsEmp2022/messages_test_features_ready_for_WS_2022.tsv
