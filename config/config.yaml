hydra:
  job:
    name: ${expt.hydra.job.name} # inherit from expt
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}_${hydra:job.name}

# Notes: https://hydra.cc/docs/tutorials/basic/your_first_app/defaults/
defaults:
  - _self_ # means configs under expt here will be overwritten by expt/...yaml
  - expt: ssl

# NOTE: the following are applied unless they are overwritten by the expt/xx.yaml
expt:
  overwrite_parent_dir: null
  approach: cross-prob # options: siamese, cross-basic, bi-prob, cross-prob
  is_ssl: True # a better name: is_two_models
  lbl_split: 0.1 # applicable only for ssl-related experiments
  lambda_1: 0 # cross-basic: penalty, ssl: consistency?
  error_decay_factor: 0.0 # only for cross-basic if lambda_1 != 0
  lambda_2: 0 # cross-prob: alignment loss, ssl: ?
  lambda_3: 0 # ssl: ?

# these are just to retrieve the correct file names for newsemp dataset.
# actual train and val data depends on main_data
train_data: [2024, 2022]
val_data: 2024 # test would be same as val_data as in in-sample setting

# num_epochs: 20
max_steps: 6000 # 4000 originally
val_check_interval: 200 # num steps (if int) or portion of epoch (if float)
lr: 3.0e-5
train_bsz: 16
eval_bsz: 16

n_trials: 1

# seeds: [0, 42, 100, 999, 1234]
seeds: [0, 42, 100]

main_data: empstories # options: newsemp, empstories

# Only keep samples if the difference between 'empathy' and 'llm_empathy' < delta
# If delta is null (i.e, None), then we don't filter any samples
delta: null


do_tune: False
do_train: True
do_test: False # automatically, not done if do_tune is True

# all files list that we can use for training / validation / testing
2024:
    train: data/NewsEmp2024/trac3_EMP_train.csv
    train_llama: data/NewsEmp2024/trac3_EMP_train_llama.tsv
    train_gpt: data/NewsEmp2024/trac3_EMP_train_gpt.tsv
    val: data/NewsEmp2024/trac3_EMP_dev.csv
    val_llama: data/NewsEmp2024/trac3_EMP_dev_llama.tsv
    val_gpt: data/NewsEmp2024/trac3_EMP_train_gpt.tsv
    test: data/NewsEmp2024/test_data_with_labels/goldstandard_EMP.csv
    test_llama: data/NewsEmp2024/test_data_with_labels/goldstandard_EMP_llama.tsv
2023:
    train: data/NewsEmp2023/WASSA23_essay_level_with_labels_train.tsv
    train_llama: data/NewsEmp2023/WASSA23_essay_level_with_labels_train_llama.tsv
    val: data/NewsEmp2023/WASSA23_essay_level_dev.tsv 
    val_llama: data/NewsEmp2023/WASSA23_essay_level_dev_llama.tsv
    test: data/NewsEmp2023/WASSA23_essay_level_test.tsv
2022:
    train: data/NewsEmp2022/messages_train_ready_for_WS.tsv
    train_llama: data/NewsEmp2022/messages_train_ready_for_WS_llama.tsv
    val: data/NewsEmp2022/messages_dev_features_ready_for_WS_2022.tsv
    val_llama: data/NewsEmp2022/messages_dev_features_ready_for_WS_2022_llama.tsv
    test: data/NewsEmp2022/messages_test_features_ready_for_WS_2022.tsv
